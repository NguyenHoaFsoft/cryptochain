{"id":"../../node_modules/@babel/core/lib/parse.js","dependencies":[{"name":"E:\\Github\\cryptochain\\node_modules\\@babel\\core\\lib\\parse.js.map","includedInParent":true,"mtime":1739076480487},{"name":"E:\\Github\\cryptochain\\package.json","includedInParent":true,"mtime":1739085671565},{"name":"E:\\Github\\cryptochain\\.babelrc","includedInParent":true,"mtime":1737182949812},{"name":"E:\\Github\\cryptochain\\node_modules\\@babel\\core\\package.json","includedInParent":true,"mtime":1739076482297},{"name":"gensync","loc":{"line":10,"column":23,"index":213},"parent":"E:\\Github\\cryptochain\\node_modules\\@babel\\core\\lib\\parse.js","resolved":"E:\\Github\\cryptochain\\node_modules\\gensync\\index.js"},{"name":"./config/index.js","loc":{"line":16,"column":21,"index":312},"parent":"E:\\Github\\cryptochain\\node_modules\\@babel\\core\\lib\\parse.js","resolved":"E:\\Github\\cryptochain\\node_modules\\@babel\\core\\lib\\config\\index.js"},{"name":"./parser/index.js","loc":{"line":17,"column":22,"index":356},"parent":"E:\\Github\\cryptochain\\node_modules\\@babel\\core\\lib\\parse.js","resolved":"E:\\Github\\cryptochain\\node_modules\\@babel\\core\\lib\\parser\\index.js"},{"name":"./transformation/normalize-opts.js","loc":{"line":18,"column":29,"index":407},"parent":"E:\\Github\\cryptochain\\node_modules\\@babel\\core\\lib\\parse.js","resolved":"E:\\Github\\cryptochain\\node_modules\\@babel\\core\\lib\\transformation\\normalize-opts.js"},{"name":"./errors/rewrite-stack-trace.js","loc":{"line":19,"column":33,"index":479},"parent":"E:\\Github\\cryptochain\\node_modules\\@babel\\core\\lib\\parse.js","resolved":"E:\\Github\\cryptochain\\node_modules\\@babel\\core\\lib\\errors\\rewrite-stack-trace.js"}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = void 0;\nexports.parseAsync = parseAsync;\nexports.parseSync = parseSync;\nfunction _gensync() {\n  var data = require(\"gensync\");\n  _gensync = function _gensync() {\n    return data;\n  };\n  return data;\n}\nvar _index = require(\"./config/index.js\");\nvar _index2 = require(\"./parser/index.js\");\nvar _normalizeOpts = require(\"./transformation/normalize-opts.js\");\nvar _rewriteStackTrace = require(\"./errors/rewrite-stack-trace.js\");\nvar parseRunner = _gensync()(/*#__PURE__*/_regeneratorRuntime().mark(function parse(code, opts) {\n  var config;\n  return _regeneratorRuntime().wrap(function parse$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        return _context.delegateYield((0, _index.default)(opts), \"t0\", 1);\n      case 1:\n        config = _context.t0;\n        if (!(config === null)) {\n          _context.next = 4;\n          break;\n        }\n        return _context.abrupt(\"return\", null);\n      case 4:\n        return _context.delegateYield((0, _index2.default)(config.passes, (0, _normalizeOpts.default)(config), code), \"t1\", 5);\n      case 5:\n        return _context.abrupt(\"return\", _context.t1);\n      case 6:\n      case \"end\":\n        return _context.stop();\n    }\n  }, parse);\n}));\nvar parse = exports.parse = function parse(code, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n  if (callback === undefined) {\n    {\n      return (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.sync)(code, opts);\n    }\n  }\n  (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.errback)(code, opts, callback);\n};\nfunction parseSync() {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.sync).apply(void 0, arguments);\n}\nfunction parseAsync() {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(parseRunner.async).apply(void 0, arguments);\n}\n0 && 0;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":0}},{"source":"../src/parse.ts","name":"_gensync","original":{"line":1,"column":0},"generated":{"line":11,"column":9}},{"source":"../src/parse.ts","name":"_gensync","original":{"line":1,"column":0},"generated":{"line":11,"column":17}},{"source":"../src/parse.ts","name":"_gensync","original":{"line":1,"column":0},"generated":{"line":11,"column":18}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":11,"column":20}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":2}},{"source":"../src/parse.ts","name":"data","original":{"line":1,"column":0},"generated":{"line":12,"column":6}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":10}},{"source":"../src/parse.ts","name":"require","original":{"line":1,"column":0},"generated":{"line":12,"column":13}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":20}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":21}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":30}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":31}},{"source":"../src/parse.ts","name":"_gensync","original":{"line":1,"column":0},"generated":{"line":13,"column":2}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":10}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":13}},{"source":"../src/parse.ts","name":"_gensync","original":{"line":1,"column":0},"generated":{"line":13,"column":22}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":30}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":31}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":33}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":4}},{"source":"../src/parse.ts","name":"data","original":{"line":1,"column":0},"generated":{"line":14,"column":11}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":15}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":15,"column":2}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":15,"column":3}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":16,"column":2}},{"source":"../src/parse.ts","name":"data","original":{"line":1,"column":0},"generated":{"line":16,"column":9}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":16,"column":13}},{"source":"../src/parse.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":17,"column":0}},{"source":"../src/parse.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":18,"column":0}},{"source":"../src/parse.ts","name":"_index","original":{"line":3,"column":0},"generated":{"line":18,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":18,"column":10}},{"source":"../src/parse.ts","name":"require","original":{"line":3,"column":0},"generated":{"line":18,"column":13}},{"source":"../src/parse.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":18,"column":20}},{"source":"../src/parse.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":18,"column":21}},{"source":"../src/parse.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":18,"column":40}},{"source":"../src/parse.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":18,"column":41}},{"source":"../src/parse.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":19,"column":0}},{"source":"../src/parse.ts","name":"_index2","original":{"line":4,"column":0},"generated":{"line":19,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":19,"column":11}},{"source":"../src/parse.ts","name":"require","original":{"line":4,"column":0},"generated":{"line":19,"column":14}},{"source":"../src/parse.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":19,"column":21}},{"source":"../src/parse.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":19,"column":22}},{"source":"../src/parse.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":19,"column":41}},{"source":"../src/parse.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":19,"column":42}},{"source":"../src/parse.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":20,"column":0}},{"source":"../src/parse.ts","name":"_normalizeOpts","original":{"line":5,"column":0},"generated":{"line":20,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":20,"column":18}},{"source":"../src/parse.ts","name":"require","original":{"line":5,"column":0},"generated":{"line":20,"column":21}},{"source":"../src/parse.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":20,"column":28}},{"source":"../src/parse.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":20,"column":29}},{"source":"../src/parse.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":20,"column":65}},{"source":"../src/parse.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":20,"column":66}},{"source":"../src/parse.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":21,"column":0}},{"source":"../src/parse.ts","name":"_rewriteStackTrace","original":{"line":8,"column":0},"generated":{"line":21,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":21,"column":22}},{"source":"../src/parse.ts","name":"require","original":{"line":8,"column":0},"generated":{"line":21,"column":25}},{"source":"../src/parse.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":21,"column":32}},{"source":"../src/parse.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":21,"column":33}},{"source":"../src/parse.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":21,"column":66}},{"source":"../src/parse.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":21,"column":67}},{"source":"../src/parse.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":22,"column":0}},{"source":"../src/parse.ts","name":"parseRunner","original":{"line":25,"column":6},"generated":{"line":22,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":25,"column":17},"generated":{"line":22,"column":15}},{"source":"../src/parse.ts","name":"gensync","original":{"line":25,"column":20},"generated":{"line":22,"column":18}},{"source":"../src/parse.ts","name":"gensync","original":{"line":25,"column":20},"generated":{"line":22,"column":26}},{"source":"../src/parse.ts","name":"gensync","original":{"line":25,"column":26},"generated":{"line":22,"column":27}},{"source":"../src/parse.ts","name":null,"original":{"line":25,"column":27},"generated":{"line":22,"column":28}},{"source":"../src/parse.ts","name":null,"original":{"line":25,"column":27},"generated":{"line":22,"column":42}},{"source":"../src/parse.ts","name":null,"original":{"line":25,"column":27},"generated":{"line":22,"column":61}},{"source":"../src/parse.ts","name":null,"original":{"line":25,"column":27},"generated":{"line":22,"column":64}},{"source":"../src/parse.ts","name":null,"original":{"line":25,"column":27},"generated":{"line":22,"column":68}},{"source":"../src/parse.ts","name":null,"original":{"line":25,"column":28},"generated":{"line":22,"column":69}},{"source":"../src/parse.ts","name":"parse","original":{"line":25,"column":38},"generated":{"line":22,"column":78}},{"source":"../src/parse.ts","name":"parse","original":{"line":25,"column":43},"generated":{"line":22,"column":83}},{"source":"../src/parse.ts","name":"code","original":{"line":26,"column":2},"generated":{"line":22,"column":84}},{"source":"../src/parse.ts","name":null,"original":{"line":26,"column":14},"generated":{"line":22,"column":88}},{"source":"../src/parse.ts","name":"opts","original":{"line":27,"column":2},"generated":{"line":22,"column":90}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":22,"column":94}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":23,"column":2}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":23,"column":6}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":23,"column":12}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":24,"column":2}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":24,"column":9}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":24,"column":28}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":24,"column":31}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":24,"column":35}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":24,"column":45}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":24,"column":52}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":24,"column":60}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":25,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":25,"column":22}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":25,"column":30}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":25,"column":31}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":25,"column":35}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":25,"column":38}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":25,"column":46}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":25,"column":47}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":25,"column":51}},{"source":"../src/parse.ts","name":null,"original":{"line":27,"column":39},"generated":{"line":26,"column":6}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":17},"generated":{"line":27,"column":8}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":17},"generated":{"line":27,"column":15}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":17},"generated":{"line":27,"column":23}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":17},"generated":{"line":27,"column":24}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":17},"generated":{"line":27,"column":37}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":24},"generated":{"line":27,"column":38}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":24},"generated":{"line":27,"column":39}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":24},"generated":{"line":27,"column":40}},{"source":"../src/parse.ts","name":"loadConfig","original":{"line":29,"column":24},"generated":{"line":27,"column":42}},{"source":"../src/parse.ts","name":"loadConfig","original":{"line":29,"column":24},"generated":{"line":27,"column":48}},{"source":"../src/parse.ts","name":"loadConfig","original":{"line":29,"column":24},"generated":{"line":27,"column":49}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":34},"generated":{"line":27,"column":56}},{"source":"../src/parse.ts","name":"opts","original":{"line":29,"column":35},"generated":{"line":27,"column":58}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":39},"generated":{"line":27,"column":62}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":40},"generated":{"line":27,"column":63}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":40},"generated":{"line":28,"column":6}},{"source":"../src/parse.ts","name":"config","original":{"line":29,"column":8},"generated":{"line":29,"column":8}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":29,"column":14}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":29,"column":17}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":29,"column":25}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":29,"column":26}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":29,"column":28}},{"source":"../src/parse.ts","name":null,"original":{"line":29,"column":14},"generated":{"line":30,"column":8}},{"source":"../src/parse.ts","name":"config","original":{"line":31,"column":6},"generated":{"line":30,"column":14}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":30,"column":20}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":17},"generated":{"line":30,"column":25}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":30,"column":29}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":31,"column":10}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":31,"column":18}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":31,"column":19}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":31,"column":23}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":32,"column":10}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":33,"column":8}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":34,"column":8}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":34,"column":15}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":34,"column":23}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":34,"column":24}},{"source":"../src/parse.ts","name":null,"original":{"line":31,"column":21},"generated":{"line":34,"column":30}},{"source":"../src/parse.ts","name":null,"original":{"line":32,"column":11},"generated":{"line":34,"column":41}},{"source":"../src/parse.ts","name":null,"original":{"line":32,"column":15},"generated":{"line":34,"column":45}},{"source":"../src/parse.ts","name":null,"original":{"line":32,"column":15},"generated":{"line":35,"column":6}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":36,"column":8}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":36,"column":15}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":36,"column":23}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":36,"column":24}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":9},"generated":{"line":36,"column":37}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":16},"generated":{"line":36,"column":38}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":16},"generated":{"line":36,"column":39}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":16},"generated":{"line":36,"column":40}},{"source":"../src/parse.ts","name":"parser","original":{"line":35,"column":16},"generated":{"line":36,"column":42}},{"source":"../src/parse.ts","name":"parser","original":{"line":35,"column":16},"generated":{"line":36,"column":49}},{"source":"../src/parse.ts","name":"parser","original":{"line":35,"column":16},"generated":{"line":36,"column":50}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":22},"generated":{"line":36,"column":57}},{"source":"../src/parse.ts","name":"config","original":{"line":35,"column":23},"generated":{"line":36,"column":59}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":29},"generated":{"line":36,"column":65}},{"source":"../src/parse.ts","name":"passes","original":{"line":35,"column":30},"generated":{"line":36,"column":66}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":36},"generated":{"line":36,"column":72}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":38},"generated":{"line":36,"column":74}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":38},"generated":{"line":36,"column":75}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":38},"generated":{"line":36,"column":76}},{"source":"../src/parse.ts","name":"normalizeOptions","original":{"line":35,"column":38},"generated":{"line":36,"column":78}},{"source":"../src/parse.ts","name":"normalizeOptions","original":{"line":35,"column":38},"generated":{"line":36,"column":92}},{"source":"../src/parse.ts","name":"normalizeOptions","original":{"line":35,"column":38},"generated":{"line":36,"column":93}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":54},"generated":{"line":36,"column":100}},{"source":"../src/parse.ts","name":"config","original":{"line":35,"column":55},"generated":{"line":36,"column":102}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":61},"generated":{"line":36,"column":108}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":62},"generated":{"line":36,"column":109}},{"source":"../src/parse.ts","name":"code","original":{"line":35,"column":64},"generated":{"line":36,"column":111}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":68},"generated":{"line":36,"column":115}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":36,"column":116}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":37,"column":6}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":38,"column":8}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":38,"column":15}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":38,"column":23}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":38,"column":24}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":38,"column":30}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":38,"column":41}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":38,"column":49}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":38,"column":50}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":38,"column":52}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":39,"column":6}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":40,"column":6}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":41,"column":8}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":41,"column":15}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":41,"column":23}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":41,"column":24}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":41,"column":28}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":42,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":35,"column":69},"generated":{"line":43,"column":2}},{"source":"../src/parse.ts","name":"parse","original":{"line":25,"column":38},"generated":{"line":43,"column":5}},{"source":"../src/parse.ts","name":"parse","original":{"line":25,"column":43},"generated":{"line":43,"column":10}},{"source":"../src/parse.ts","name":"parse","original":{"line":25,"column":43},"generated":{"line":44,"column":0}},{"source":"../src/parse.ts","name":null,"original":{"line":36,"column":1},"generated":{"line":44,"column":1}},{"source":"../src/parse.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":44,"column":3}},{"source":"../src/parse.ts","name":null,"original":{"line":38,"column":7},"generated":{"line":45,"column":0}},{"source":"../src/parse.ts","name":"parse","original":{"line":38,"column":13},"generated":{"line":45,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":38,"column":25},"generated":{"line":45,"column":9}},{"source":"../src/parse.ts","name":"exports","original":{"line":38,"column":25},"generated":{"line":45,"column":12}},{"source":"../src/parse.ts","name":null,"original":{"line":38,"column":25},"generated":{"line":45,"column":19}},{"source":"../src/parse.ts","name":"parse","original":{"line":38,"column":25},"generated":{"line":45,"column":20}},{"source":"../src/parse.ts","name":null,"original":{"line":38,"column":25},"generated":{"line":45,"column":25}},{"source":"../src/parse.ts","name":null,"original":{"line":38,"column":28},"generated":{"line":45,"column":28}},{"source":"../src/parse.ts","name":"parse","original":{"line":38,"column":37},"generated":{"line":45,"column":37}},{"source":"../src/parse.ts","name":"parse","original":{"line":38,"column":42},"generated":{"line":45,"column":42}},{"source":"../src/parse.ts","name":"code","original":{"line":39,"column":2},"generated":{"line":45,"column":43}},{"source":"../src/parse.ts","name":null,"original":{"line":39,"column":6},"generated":{"line":45,"column":47}},{"source":"../src/parse.ts","name":"opts","original":{"line":40,"column":2},"generated":{"line":45,"column":49}},{"source":"../src/parse.ts","name":null,"original":{"line":40,"column":7},"generated":{"line":45,"column":53}},{"source":"../src/parse.ts","name":"callback","original":{"line":41,"column":2},"generated":{"line":45,"column":55}},{"source":"../src/parse.ts","name":null,"original":{"line":41,"column":30},"generated":{"line":45,"column":63}},{"source":"../src/parse.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":45,"column":65}},{"source":"../src/parse.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":46,"column":2}},{"source":"../src/parse.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":46,"column":6}},{"source":"../src/parse.ts","name":"opts","original":{"line":43,"column":13},"generated":{"line":46,"column":13}},{"source":"../src/parse.ts","name":null,"original":{"line":43,"column":17},"generated":{"line":46,"column":17}},{"source":"../src/parse.ts","name":null,"original":{"line":43,"column":22},"generated":{"line":46,"column":22}},{"source":"../src/parse.ts","name":null,"original":{"line":43,"column":32},"generated":{"line":46,"column":32}},{"source":"../src/parse.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":46,"column":34}},{"source":"../src/parse.ts","name":"callback","original":{"line":44,"column":4},"generated":{"line":47,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":44,"column":12},"generated":{"line":47,"column":12}},{"source":"../src/parse.ts","name":"opts","original":{"line":44,"column":15},"generated":{"line":47,"column":15}},{"source":"../src/parse.ts","name":null,"original":{"line":44,"column":19},"generated":{"line":47,"column":19}},{"source":"../src/parse.ts","name":"opts","original":{"line":45,"column":4},"generated":{"line":48,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":45,"column":8},"generated":{"line":48,"column":8}},{"source":"../src/parse.ts","name":"undefined","original":{"line":45,"column":11},"generated":{"line":48,"column":11}},{"source":"../src/parse.ts","name":null,"original":{"line":45,"column":40},"generated":{"line":48,"column":20}},{"source":"../src/parse.ts","name":null,"original":{"line":46,"column":2},"generated":{"line":49,"column":2}},{"source":"../src/parse.ts","name":null,"original":{"line":48,"column":2},"generated":{"line":50,"column":2}},{"source":"../src/parse.ts","name":"callback","original":{"line":48,"column":6},"generated":{"line":50,"column":6}},{"source":"../src/parse.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":50,"column":14}},{"source":"../src/parse.ts","name":"undefined","original":{"line":48,"column":19},"generated":{"line":50,"column":19}},{"source":"../src/parse.ts","name":null,"original":{"line":48,"column":28},"generated":{"line":50,"column":28}},{"source":"../src/parse.ts","name":null,"original":{"line":48,"column":30},"generated":{"line":50,"column":30}},{"source":"../src/parse.ts","name":null,"original":{"line":53,"column":11},"generated":{"line":51,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":52,"column":6}},{"source":"../src/parse.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":52,"column":13}},{"source":"../src/parse.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":52,"column":14}},{"source":"../src/parse.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":52,"column":15}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":57,"column":13},"generated":{"line":52,"column":17}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":57,"column":13},"generated":{"line":52,"column":35}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":57,"column":13},"generated":{"line":52,"column":36}},{"source":"../src/parse.ts","name":null,"original":{"line":57,"column":33},"generated":{"line":52,"column":56}},{"source":"../src/parse.ts","name":"parseRunner","original":{"line":57,"column":34},"generated":{"line":52,"column":58}},{"source":"../src/parse.ts","name":null,"original":{"line":57,"column":45},"generated":{"line":52,"column":69}},{"source":"../src/parse.ts","name":"sync","original":{"line":57,"column":46},"generated":{"line":52,"column":70}},{"source":"../src/parse.ts","name":null,"original":{"line":57,"column":50},"generated":{"line":52,"column":74}},{"source":"../src/parse.ts","name":null,"original":{"line":57,"column":51},"generated":{"line":52,"column":75}},{"source":"../src/parse.ts","name":"code","original":{"line":57,"column":52},"generated":{"line":52,"column":76}},{"source":"../src/parse.ts","name":null,"original":{"line":57,"column":56},"generated":{"line":52,"column":80}},{"source":"../src/parse.ts","name":"opts","original":{"line":57,"column":58},"generated":{"line":52,"column":82}},{"source":"../src/parse.ts","name":null,"original":{"line":57,"column":62},"generated":{"line":52,"column":86}},{"source":"../src/parse.ts","name":null,"original":{"line":57,"column":63},"generated":{"line":52,"column":87}},{"source":"../src/parse.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":53,"column":4}},{"source":"../src/parse.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":54,"column":2}},{"source":"../src/parse.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":55,"column":2}},{"source":"../src/parse.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":55,"column":3}},{"source":"../src/parse.ts","name":null,"original":{"line":61,"column":2},"generated":{"line":55,"column":4}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":61,"column":2},"generated":{"line":55,"column":6}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":61,"column":2},"generated":{"line":55,"column":24}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":61,"column":2},"generated":{"line":55,"column":25}},{"source":"../src/parse.ts","name":null,"original":{"line":61,"column":22},"generated":{"line":55,"column":45}},{"source":"../src/parse.ts","name":"parseRunner","original":{"line":61,"column":23},"generated":{"line":55,"column":47}},{"source":"../src/parse.ts","name":null,"original":{"line":61,"column":34},"generated":{"line":55,"column":58}},{"source":"../src/parse.ts","name":"errback","original":{"line":61,"column":35},"generated":{"line":55,"column":59}},{"source":"../src/parse.ts","name":null,"original":{"line":61,"column":42},"generated":{"line":55,"column":66}},{"source":"../src/parse.ts","name":null,"original":{"line":61,"column":43},"generated":{"line":55,"column":67}},{"source":"../src/parse.ts","name":"code","original":{"line":61,"column":44},"generated":{"line":55,"column":68}},{"source":"../src/parse.ts","name":null,"original":{"line":61,"column":48},"generated":{"line":55,"column":72}},{"source":"../src/parse.ts","name":"opts","original":{"line":61,"column":50},"generated":{"line":55,"column":74}},{"source":"../src/parse.ts","name":null,"original":{"line":61,"column":54},"generated":{"line":55,"column":78}},{"source":"../src/parse.ts","name":"callback","original":{"line":61,"column":56},"generated":{"line":55,"column":80}},{"source":"../src/parse.ts","name":null,"original":{"line":61,"column":64},"generated":{"line":55,"column":88}},{"source":"../src/parse.ts","name":null,"original":{"line":61,"column":65},"generated":{"line":55,"column":89}},{"source":"../src/parse.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":56,"column":0}},{"source":"../src/parse.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":56,"column":1}},{"source":"../src/parse.ts","name":null,"original":{"line":64,"column":7},"generated":{"line":57,"column":0}},{"source":"../src/parse.ts","name":"parseSync","original":{"line":64,"column":16},"generated":{"line":57,"column":9}},{"source":"../src/parse.ts","name":"parseSync","original":{"line":64,"column":25},"generated":{"line":57,"column":18}},{"source":"../src/parse.ts","name":"parseSync","original":{"line":64,"column":25},"generated":{"line":57,"column":19}},{"source":"../src/parse.ts","name":null,"original":{"line":64,"column":72},"generated":{"line":57,"column":21}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":2},"generated":{"line":58,"column":2}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":9},"generated":{"line":58,"column":9}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":9},"generated":{"line":58,"column":10}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":9},"generated":{"line":58,"column":11}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":65,"column":9},"generated":{"line":58,"column":13}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":65,"column":9},"generated":{"line":58,"column":31}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":65,"column":9},"generated":{"line":58,"column":32}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":29},"generated":{"line":58,"column":52}},{"source":"../src/parse.ts","name":"parseRunner","original":{"line":65,"column":30},"generated":{"line":58,"column":54}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":41},"generated":{"line":58,"column":65}},{"source":"../src/parse.ts","name":"sync","original":{"line":65,"column":42},"generated":{"line":58,"column":66}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":46},"generated":{"line":58,"column":70}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":47},"generated":{"line":58,"column":71}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":47},"generated":{"line":58,"column":72}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":47},"generated":{"line":58,"column":77}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":47},"generated":{"line":58,"column":86}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":55},"generated":{"line":58,"column":95}},{"source":"../src/parse.ts","name":null,"original":{"line":65,"column":56},"generated":{"line":58,"column":96}},{"source":"../src/parse.ts","name":null,"original":{"line":66,"column":0},"generated":{"line":59,"column":0}},{"source":"../src/parse.ts","name":null,"original":{"line":67,"column":7},"generated":{"line":60,"column":0}},{"source":"../src/parse.ts","name":"parseAsync","original":{"line":67,"column":16},"generated":{"line":60,"column":9}},{"source":"../src/parse.ts","name":"parseAsync","original":{"line":67,"column":26},"generated":{"line":60,"column":19}},{"source":"../src/parse.ts","name":"parseAsync","original":{"line":67,"column":26},"generated":{"line":60,"column":20}},{"source":"../src/parse.ts","name":null,"original":{"line":67,"column":74},"generated":{"line":60,"column":22}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":2},"generated":{"line":61,"column":2}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":9},"generated":{"line":61,"column":9}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":9},"generated":{"line":61,"column":10}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":9},"generated":{"line":61,"column":11}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":68,"column":9},"generated":{"line":61,"column":13}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":68,"column":9},"generated":{"line":61,"column":31}},{"source":"../src/parse.ts","name":"beginHiddenCallStack","original":{"line":68,"column":9},"generated":{"line":61,"column":32}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":29},"generated":{"line":61,"column":52}},{"source":"../src/parse.ts","name":"parseRunner","original":{"line":68,"column":30},"generated":{"line":61,"column":54}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":41},"generated":{"line":61,"column":65}},{"source":"../src/parse.ts","name":"async","original":{"line":68,"column":42},"generated":{"line":61,"column":66}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":47},"generated":{"line":61,"column":71}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":48},"generated":{"line":61,"column":72}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":48},"generated":{"line":61,"column":73}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":48},"generated":{"line":61,"column":78}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":48},"generated":{"line":61,"column":87}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":56},"generated":{"line":61,"column":96}},{"source":"../src/parse.ts","name":null,"original":{"line":68,"column":57},"generated":{"line":61,"column":97}},{"source":"../src/parse.ts","name":null,"original":{"line":69,"column":0},"generated":{"line":62,"column":0}},{"source":"../src/parse.ts","name":null,"original":{"line":69,"column":1},"generated":{"line":63,"column":0}},{"source":"../src/parse.ts","name":null,"original":{"line":69,"column":1},"generated":{"line":63,"column":1}},{"source":"../src/parse.ts","name":null,"original":{"line":69,"column":1},"generated":{"line":63,"column":5}},{"source":"../src/parse.ts","name":null,"original":{"line":69,"column":1},"generated":{"line":63,"column":6}}],"sources":{"../src/parse.ts":"import gensync, { type Handler } from \"gensync\";\n\nimport loadConfig, { type InputOptions } from \"./config/index.ts\";\nimport parser, { type ParseResult } from \"./parser/index.ts\";\nimport normalizeOptions from \"./transformation/normalize-opts.ts\";\nimport type { ValidatedOptions } from \"./config/validation/options.ts\";\n\nimport { beginHiddenCallStack } from \"./errors/rewrite-stack-trace.ts\";\n\ntype FileParseCallback = {\n  (err: Error, ast: null): void;\n  (err: null, ast: ParseResult | null): void;\n};\n\ntype Parse = {\n  (code: string, callback: FileParseCallback): void;\n  (\n    code: string,\n    opts: InputOptions | undefined | null,\n    callback: FileParseCallback,\n  ): void;\n  (code: string, opts?: InputOptions | null): ParseResult | null;\n};\n\nconst parseRunner = gensync(function* parse(\n  code: string,\n  opts: InputOptions | undefined | null,\n): Handler<ParseResult | null> {\n  const config = yield* loadConfig(opts);\n\n  if (config === null) {\n    return null;\n  }\n\n  return yield* parser(config.passes, normalizeOptions(config), code);\n});\n\nexport const parse: Parse = function parse(\n  code,\n  opts?,\n  callback?: FileParseCallback,\n) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined as ValidatedOptions;\n  }\n\n  if (callback === undefined) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'parse' function expects a callback. If you need to call it synchronously, please use 'parseSync'.\",\n      );\n    } else {\n      // console.warn(\n      //   \"Starting from Babel 8.0.0, the 'parse' function will expect a callback. If you need to call it synchronously, please use 'parseSync'.\",\n      // );\n      return beginHiddenCallStack(parseRunner.sync)(code, opts);\n    }\n  }\n\n  beginHiddenCallStack(parseRunner.errback)(code, opts, callback);\n};\n\nexport function parseSync(...args: Parameters<typeof parseRunner.sync>) {\n  return beginHiddenCallStack(parseRunner.sync)(...args);\n}\nexport function parseAsync(...args: Parameters<typeof parseRunner.async>) {\n  return beginHiddenCallStack(parseRunner.async)(...args);\n}\n"},"lineCount":null}},"error":null,"hash":"9296aa828de9b7d16df58844dacf1488","cacheData":{"env":{}}}